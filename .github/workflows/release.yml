name: Build release binaries

on:
  workflow_dispatch:
  schedule:
    - cron: '41 7 * * 2,6'
  push:
    branches:
      - '**'
    tags:
      - '**'
env:
  PYTHONUTF8: 1
  GITHUB_TOKEN: ${{ github.token }}
  VCPKG_ROOT: "${{ github.workspace }}/vcpkg"

jobs:

  build-mac:
    runs-on: macos-13
    timeout-minutes: 75
    env:
      SECUREFS_TEST_FORCE_XATTR: 1
    strategy:
      matrix:
        include:
          - arch: amd64
            is_fuse_t: true
            triplet: x64-osx
            cmake_osx_arch: x86_64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: venv
        run: |
          python3 -m venv .venv;
          .venv/bin/pip install -U xattr;
      - name: install
        run: |
          if [ "${{ matrix.is_fuse_t }}" = "true" ]; then
            brew tap macos-fuse-t/homebrew-cask && brew install fuse-t;
          else
            brew install macfuse;
          fi
      - name: Get latest Github release of vcpkg
        uses: cardinalby/git-get-release-action@v1
        id: get-latest-vcpkg-release
        with:
          latest: true
          repo: microsoft/vcpkg
          prerelease: false
          draft: false
      - name: checkout-vcpkg
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}/vcpkg
          repository: microsoft/vcpkg
          ref: '${{ steps.get-latest-vcpkg-release.outputs.tag_name }}'
          fetch-depth: 1
      - name: cache-vcpkg
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/build/vcpkg_installed
          key: release-macOS-${{ matrix.arch }}-${{ steps.get-latest-vcpkg-release.outputs.tag_name }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            release-macOS-${{ matrix.arch }}-${{ steps.get-latest-vcpkg-release.outputs.tag_name }}-
            release-macOS-${{ matrix.arch }}-
      - name: build
        run: |
          source .venv/bin/activate
          python build.py --lto --vcpkg_root=${{ github.workspace }}/vcpkg --triplet=${{ matrix.triplet }} --build_root=./build \
            --build_type Release \
            --cmake_defines CMAKE_OSX_ARCHITECTURES=${{ matrix.cmake_osx_arch }} \
                ${{ matrix.is_fuse_t && 'SECUREFS_USE_FUSET=ON' || '' }} \
            ${{ matrix.arch == 'amd64' && matrix.is_fuse_t == false && '--enable_unit_test' || '' }} \
            ${{ matrix.arch == 'amd64' && matrix.is_fuse_t == true && '--enable_unit_test --enable_integration_test' || '' }}
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          path: build/securefs
          name: securefs-macos-${{ matrix.arch }}${{ matrix.is_fuse_t && '-fuse-t' || '' }}-release
      - name: Upload Logs Always
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-mac-${{ matrix.arch }}${{ matrix.is_fuse_t && '-fuse-t' || '' }}-logs
          path: |
            build/**/*.log
            build/**/*.out
            build/**/*.err
